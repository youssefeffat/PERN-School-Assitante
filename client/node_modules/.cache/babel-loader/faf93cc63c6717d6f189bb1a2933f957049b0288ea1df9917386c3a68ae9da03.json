{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\WEB\\\\Project\\\\ProjectV2\\\\client\\\\src\\\\Components\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  // Handle Inputs\n  const handleInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n    setErrors({\n      ...errors,\n      [name]: ''\n    }); // Clear errors when user starts typing again\n  };\n\n  // Handle Submit\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Object Destructuring\n    const {\n      username,\n      email,\n      password\n    } = user;\n\n    // Validation\n    let hasErrors = false;\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!username.trim()) {\n      setErrors({\n        ...errors,\n        username: 'Username is required'\n      });\n      hasErrors = true;\n    }\n    if (!email.trim() || !emailPattern.test(email)) {\n      setErrors({\n        ...errors,\n        email: 'Invalid email format'\n      });\n      hasErrors = true;\n    }\n    if (!password.trim() || password.length < 8) {\n      setErrors({\n        ...errors,\n        password: 'Password must be at least 8 characters long'\n      });\n      hasErrors = true;\n    }\n    if (hasErrors) {\n      return; // Don't proceed with form submission if there are validation errors\n    }\n    try {\n      const res = await fetch('/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      if (res.status === 400 || !res) {\n        window.alert('Invalid Signup Details');\n      } else {\n        window.alert('Signup Successful');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container shadow my-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5 d-flex flex-column align-items-center text-white justify-content-center form order-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-4 fw-bolder\",\n            children: \"Hello, Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-center\",\n            children: \"Enter Your Details to Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-4\",\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/login\",\n            className: \"btn btn-outline-light rounded-pill pb-2 w-50\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-6 fw-bolder mb-5\",\n            children: \"SignUp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            method: \"POST\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"form-label\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"name\",\n                name: \"username\",\n                value: user.username,\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"form-label\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"exampleInputEmail1\",\n                \"aria-describedby\": \"emailHelp\",\n                name: \"email\",\n                value: user.email,\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"emailHelp\",\n                className: \"form-text\",\n                children: \"We'll never share your email with anyone else.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword1\",\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                name: \"password\",\n                value: user.password,\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: \"exampleCheck1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"exampleCheck1\",\n                children: \"I Agree Terms and Conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-outline-primary w-100 mt-4 rounded-pill\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"4cT7WEfwl6/l25LwoQe3gildV8c=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\n\n// import React, { useState } from 'react';\n// import { NavLink , Link  } from 'react-router-dom';\n// import { useNavigate} from 'react-router';\n\n// const Signup = () => {\n\n//   const Navigate = useNavigate()\n\n//   const [user, setUser] = useState(\n//     {\n//       username : \"\",\n//       email : \"\",\n//       password : \"\"\n//     }\n//   );\n\n//   const [errors, setErrors] = useState({\n//     username : \"\",\n//     email: '',\n//     password: ''\n//   });\n\n//   // Handle Inputs\n//   const handleInput = (event) =>{\n//     let name = event.target.name;\n//     let value = event.target.value;\n//     setUser({...user, [name]:value});\n//     setErrors({ ...errors, [name]: '' }); // Clear errors when user starts typing again\n\n//   }\n\n//   // Handle Submit\n//   const handleSubmit = async (event)=>{\n//     event.preventDefault();\n\n//     // Object DeStructuring\n//     // Store Object Data into Variables\n//     const {username, email, password} = user;\n\n//     // Validation\n//     let hasErrors = false;\n//     const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n//     if (!username.trim()) {\n//       setErrors({ ...errors, username: 'Username is required' });\n//       hasErrors = true;\n//     }\n\n//     if (!email.trim() || !emailPattern.test(email)) {\n//       setErrors({ ...errors, email: 'Invalid email format' });\n//       hasErrors = true;\n//     }\n\n//     if (!password.trim() || password.length < 8) {\n//       setErrors({ ...errors, password: 'Password must be at least 8 characters long' });\n//       hasErrors = true;\n//     }\n\n//     if (hasErrors) {\n//       return; // Don't proceed with form submission if there are validation errors\n//     }\n\n//     try {\n//       //It is Submitted on port 3000 by default\n//       // Which is Front End but we need to \n//       // Submit it on Backend which is on \n//       // Port 3001. So we need Proxy.\n//       const res = await fetch('/Signup', {\n//         method : \"POST\",\n//         headers : {\"Content-Type\" : \"application/json\"},\n//         body : JSON.stringify({username, email, password})\n//       })\n//       console.log(res.status)\n//       if(res.status === 400 || !res){\n//         window.alert(\"Already Used Details / Invalid Signup Details'\")\n//       }else{\n//         // You need to Restart the Server for Proxy Works\n//         // Now Try Again\n//         window.alert(\"Registered Successfully\");\n//         Navigate('/login')\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   }\n\n//     return (\n//         <div>\n//             <div className=\"container shadow my-5\">\n//         <div className=\"row justify-content-end\">\n//           <div className=\"col-md-5 d-flex flex-column align-items-center text-white justify-content-center form order-2\">\n//             <h1 className=\"display-4 fw-bolder\">Hello, Friend</h1>\n//             <p className=\"lead text-center\">Enter Your Details to Register</p>\n//             <h5 className=\"mb-4\">OR</h5>\n//             <NavLink\n//               to=\"/login\"\n//               className=\"btn btn-outline-light rounded-pill pb-2 w-50\"\n//             >\n//               Login\n//             </NavLink>\n//           </div>\n//           <div className=\"col-md-6 p-5\">\n//           <h1 className=\"display-6 fw-bolder mb-5\">SignUp</h1>\n//             <form onSubmit={handleSubmit} method=\"POST\">\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"name\" className=\"form-label\">\n//                   Username\n//                 </label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"name\"\n//                   name=\"username\"\n//                   value={user.username}\n//                   onChange={handleInput}\n//                 />\n//                 {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n//                   Email address\n//                 </label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputEmail1\"\n//                   aria-describedby=\"emailHelp\"\n//                   name=\"email\"\n//                   value={user.email}\n//                   onChange={handleInput}\n//                 />\n//                 {errors.email && <p className=\"text-danger\">{errors.email}</p>}\n\n//                 <div id=\"emailHelp\" className=\"form-text\">\n//                   We'll never share your email with anyone else.\n//                 </div>\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n//                   Password\n//                 </label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   name=\"password\"\n//                   value={user.password}\n//                   onChange={handleInput}\n//                 />\n//                 {errors.password && <p className=\"text-danger\">{errors.password}</p>}\n\n//               </div>\n//               <div className=\"mb-3 form-check\">\n//                 <input\n//                   type=\"checkbox\"\n//                   className=\"form-check-input\"\n//                   id=\"exampleCheck1\"\n//                 />\n//                 <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n//                   I Agree Terms and Conditions\n//                 </label>\n//               </div>  \n//               <Link to=\"/Dashboard\" >    \n//               <button  type=\"submit\"   className=\"btn btn-outline-primary w-100 mt-4 rounded-pill\">\n//                 Register\n//               </button>\n//               </Link>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//         </div>\n//     );\n// }\n\n// export default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","NavLink","Link","useNavigate","jsxDEV","_jsxDEV","Signup","_s","navigate","user","setUser","username","email","password","errors","setErrors","handleInput","event","name","value","target","handleSubmit","preventDefault","hasErrors","emailPattern","trim","test","length","res","fetch","method","headers","body","JSON","stringify","status","window","alert","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/WEB/Project/ProjectV2/client/src/Components/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  // Handle Inputs\r\n  const handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n    setErrors({ ...errors, [name]: '' }); // Clear errors when user starts typing again\r\n  };\r\n\r\n  // Handle Submit\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Object Destructuring\r\n    const { username, email, password } = user;\r\n\r\n    // Validation\r\n    let hasErrors = false;\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n    if (!username.trim()) {\r\n      setErrors({ ...errors, username: 'Username is required' });\r\n      hasErrors = true;\r\n    }\r\n\r\n    if (!email.trim() || !emailPattern.test(email)) {\r\n      setErrors({ ...errors, email: 'Invalid email format' });\r\n      hasErrors = true;\r\n    }\r\n\r\n    if (!password.trim() || password.length < 8) {\r\n      setErrors({ ...errors, password: 'Password must be at least 8 characters long' });\r\n      hasErrors = true;\r\n    }\r\n\r\n    if (hasErrors) {\r\n      return; // Don't proceed with form submission if there are validation errors\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('/signup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, email, password })\r\n      });\r\n\r\n      if (res.status === 400 || !res) {\r\n        window.alert('Invalid Signup Details');\r\n      } else {\r\n        window.alert('Signup Successful');\r\n        navigate('/login');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container shadow my-5\">\r\n        <div className=\"row justify-content-end\">\r\n          <div className=\"col-md-5 d-flex flex-column align-items-center text-white justify-content-center form order-2\">\r\n            <h1 className=\"display-4 fw-bolder\">Hello, Friend</h1>\r\n            <p className=\"lead text-center\">Enter Your Details to Register</p>\r\n            <h5 className=\"mb-4\">OR</h5>\r\n            <NavLink to=\"/login\" className=\"btn btn-outline-light rounded-pill pb-2 w-50\">\r\n              Login\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"col-md-6 p-5\">\r\n            <h1 className=\"display-6 fw-bolder mb-5\">SignUp</h1>\r\n            <form onSubmit={handleSubmit} method=\"POST\">\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"name\" className=\"form-label\">\r\n                  Username\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  name=\"username\"\r\n                  value={user.username}\r\n                  onChange={handleInput}\r\n                />\r\n                {errors.username && <p className=\"text-danger\">{errors.username}</p>}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  name=\"email\"\r\n                  value={user.email}\r\n                  onChange={handleInput}\r\n                />\r\n                {errors.email && <p className=\"text-danger\">{errors.email}</p>}\r\n                <div id=\"emailHelp\" className=\"form-text\">\r\n                  We'll never share your email with anyone else.\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  name=\"password\"\r\n                  value={user.password}\r\n                  onChange={handleInput}\r\n                />\r\n                {errors.password && <p className=\"text-danger\">{errors.password}</p>}\r\n              </div>\r\n              <div className=\"mb-3 form-check\">\r\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n                  I Agree Terms and Conditions\r\n                </label>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-outline-primary w-100 mt-4 rounded-pill\">\r\n                Register\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { NavLink , Link  } from 'react-router-dom';\r\n// import { useNavigate} from 'react-router';\r\n\r\n// const Signup = () => {\r\n\r\n//   const Navigate = useNavigate()\r\n\r\n//   const [user, setUser] = useState(\r\n//     {\r\n//       username : \"\",\r\n//       email : \"\",\r\n//       password : \"\"\r\n//     }\r\n//   );\r\n\r\n//   const [errors, setErrors] = useState({\r\n//     username : \"\",\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n\r\n//   // Handle Inputs\r\n//   const handleInput = (event) =>{\r\n//     let name = event.target.name;\r\n//     let value = event.target.value;\r\n//     setUser({...user, [name]:value});\r\n//     setErrors({ ...errors, [name]: '' }); // Clear errors when user starts typing again\r\n\r\n//   }\r\n\r\n//   // Handle Submit\r\n//   const handleSubmit = async (event)=>{\r\n//     event.preventDefault();\r\n\r\n//     // Object DeStructuring\r\n//     // Store Object Data into Variables\r\n//     const {username, email, password} = user;\r\n\r\n//     // Validation\r\n//     let hasErrors = false;\r\n//     const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n//     if (!username.trim()) {\r\n//       setErrors({ ...errors, username: 'Username is required' });\r\n//       hasErrors = true;\r\n//     }\r\n\r\n//     if (!email.trim() || !emailPattern.test(email)) {\r\n//       setErrors({ ...errors, email: 'Invalid email format' });\r\n//       hasErrors = true;\r\n//     }\r\n\r\n//     if (!password.trim() || password.length < 8) {\r\n//       setErrors({ ...errors, password: 'Password must be at least 8 characters long' });\r\n//       hasErrors = true;\r\n//     }\r\n\r\n//     if (hasErrors) {\r\n//       return; // Don't proceed with form submission if there are validation errors\r\n//     }\r\n\r\n\r\n//     try {\r\n//       //It is Submitted on port 3000 by default\r\n//       // Which is Front End but we need to \r\n//       // Submit it on Backend which is on \r\n//       // Port 3001. So we need Proxy.\r\n//       const res = await fetch('/Signup', {\r\n//         method : \"POST\",\r\n//         headers : {\"Content-Type\" : \"application/json\"},\r\n//         body : JSON.stringify({username, email, password})\r\n//       })\r\n//       console.log(res.status)\r\n//       if(res.status === 400 || !res){\r\n//         window.alert(\"Already Used Details / Invalid Signup Details'\")\r\n//       }else{\r\n//         // You need to Restart the Server for Proxy Works\r\n//         // Now Try Again\r\n//         window.alert(\"Registered Successfully\");\r\n//         Navigate('/login')\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   }\r\n\r\n\r\n  \r\n//     return (\r\n//         <div>\r\n//             <div className=\"container shadow my-5\">\r\n//         <div className=\"row justify-content-end\">\r\n//           <div className=\"col-md-5 d-flex flex-column align-items-center text-white justify-content-center form order-2\">\r\n//             <h1 className=\"display-4 fw-bolder\">Hello, Friend</h1>\r\n//             <p className=\"lead text-center\">Enter Your Details to Register</p>\r\n//             <h5 className=\"mb-4\">OR</h5>\r\n//             <NavLink\r\n//               to=\"/login\"\r\n//               className=\"btn btn-outline-light rounded-pill pb-2 w-50\"\r\n//             >\r\n//               Login\r\n//             </NavLink>\r\n//           </div>\r\n//           <div className=\"col-md-6 p-5\">\r\n//           <h1 className=\"display-6 fw-bolder mb-5\">SignUp</h1>\r\n//             <form onSubmit={handleSubmit} method=\"POST\">\r\n//               <div className=\"mb-3\">\r\n//                 <label htmlFor=\"name\" className=\"form-label\">\r\n//                   Username\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   className=\"form-control\"\r\n//                   id=\"name\"\r\n//                   name=\"username\"\r\n//                   value={user.username}\r\n//                   onChange={handleInput}\r\n//                 />\r\n//                 {errors.email && <p className=\"text-danger\">{errors.email}</p>}\r\n\r\n//               </div>\r\n//               <div className=\"mb-3\">\r\n//                 <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n//                   Email address\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputEmail1\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   name=\"email\"\r\n//                   value={user.email}\r\n//                   onChange={handleInput}\r\n//                 />\r\n//                 {errors.email && <p className=\"text-danger\">{errors.email}</p>}\r\n\r\n//                 <div id=\"emailHelp\" className=\"form-text\">\r\n//                   We'll never share your email with anyone else.\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"mb-3\">\r\n//                 <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\r\n//                   Password\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   name=\"password\"\r\n//                   value={user.password}\r\n//                   onChange={handleInput}\r\n//                 />\r\n//                 {errors.password && <p className=\"text-danger\">{errors.password}</p>}\r\n\r\n//               </div>\r\n//               <div className=\"mb-3 form-check\">\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   className=\"form-check-input\"\r\n//                   id=\"exampleCheck1\"\r\n//                 />\r\n//                 <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n//                   I Agree Terms and Conditions\r\n//                 </label>\r\n//               </div>  \r\n//               <Link to=\"/Dashboard\" >    \r\n//               <button  type=\"submit\"   className=\"btn btn-outline-primary w-100 mt-4 rounded-pill\">\r\n//                 Register\r\n//               </button>\r\n//               </Link>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Signup;"],"mappings":"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CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}